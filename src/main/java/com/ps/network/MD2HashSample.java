package com.ps.network;

import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

public class MD2HashSample {

	public static String encryptThisString(String input, String algorithm ) {
		try {
			// getInstance() method is called with algorithm MD2
			MessageDigest md = MessageDigest.getInstance(algorithm);

			// digest() method is called
			// to calculate message digest of the input string
			// returned as array of byte
			byte[] messageDigest = md.digest(input.getBytes());

			// Convert byte array into signum representation
			BigInteger no = new BigInteger(1, messageDigest);

			// Convert message digest into hex value
			String hashtext = no.toString(16);

			// Add preceding 0s to make it 32 bit
			while (hashtext.length() < 32) {
				hashtext = "0" + hashtext;
			}

			// return the HashText
			return hashtext;
		}

		// For specifying wrong message digest algorithms
		catch (NoSuchAlgorithmException e) {
			throw new RuntimeException(e);
		}
	}

	// Driver code
	public static void main(String args[]) throws NoSuchAlgorithmException {
		System.out.println("HashCode Generated by MD2 for: ");

		String s1 = "GeeksForGeeks";
		String s2 = "hello world";
		System.out.println("MD2:- \n" + s1 + " : " + encryptThisString(s1,"MD2"));

		System.out.println("\n" + s2 + " : " + encryptThisString(s2,"MD2"));
		System.out.println("MD5:- \n" + s1 + " : " + encryptThisString(s1,"MD5"));

		System.out.println("\n" + s2 + " : " + encryptThisString(s2,"MD5"));
		System.out.println("SHA-1:- \n" + s1 + " : " + encryptThisString(s1,"SHA-1"));

		System.out.println("\n" + s2 + " : " + encryptThisString(s2,"SHA-1"));
		System.out.println("SHA-224:- \n" + s1 + " : " + encryptThisString(s1,"SHA-224"));

		System.out.println("\n" + s2 + " : " + encryptThisString(s2,"SHA-224"));
		System.out.println("SHA-256:- \n" + s1 + " : " + encryptThisString(s1,"SHA-256"));

		System.out.println("\n" + s2 + " : " + encryptThisString(s2,"SHA-256"));
		System.out.println("SHA-384:-\n" + s1 + " : " + encryptThisString(s1,"SHA-384"));

		System.out.println("\n" + s2 + " : " + encryptThisString(s2,"SHA-384"));
		System.out.println("SHA-512:- \n" + s1 + " : " + encryptThisString(s1,"SHA-512"));

		System.out.println("\n" + s2 + " : " + encryptThisString(s2,"SHA-512"));
	}
}
